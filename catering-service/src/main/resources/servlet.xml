<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvs="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">


	
	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.le07">
	  	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	  	<!-- <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/> -->
	</context:component-scan>
	

	
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
		    	<constructor-arg value="UTF-8" />
			</bean>
           <!-- <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes" value="application/json" />
                <property name="features">
                    <list>
                        <value>WriteMapNullValue</value>
                        <value>QuoteFieldNames</value>
                    </list>
                </property>
            </bean>-->
  		</mvc:message-converters>
  		<mvc:argument-resolvers>
  			<bean class="org.springframework.data.web.PageableArgumentResolver"></bean>
  		</mvc:argument-resolvers>
	</mvc:annotation-driven>
	
	<!-- 文件上传Resolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="uploadTempDir" value="/tmp" />
	</bean>
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- <mvc:annotation-driven /> -->
	<mvc:resources mapping="/static/**" location="/static/" cache-period="31556926"/>
    <mvc:resources mapping="/attached/**" location="file:/ctr/attached/" />

    <!--<bean class="com.le07.catering.web.controller.StaticResourceMappingManagerImpl" />-->
            
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 定义无需Controller的url<->view直接映射
    <mvc:view-controller path="/" view-name="redirect:/index"/>-->

		
 	<bean id="webExceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <property name="defaultErrorView" value="error.default" />
        <property name="defaultStatusCode" value="404"/>
        <property name="exceptionAttribute" value="exception"/>
	</bean>
	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver"/>
	
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate"> 
        <property name="messageConverters">
            <bean id="jsonMessageConverter" class="com.le07.framework.support.spring.MappingFastjsonHttpMessageConverter"/>
        </property> 
    </bean>
    
	<!-- 将Controller抛出的异常转到特定View, 保持SiteMesh的装饰效果 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
		<property name="exceptionMappings">  
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>
				<prop key="java.lang.Throwable">error/500</prop>
            </props>
		</property>  
    </bean> 
    
	<!-- 支持 Shiro对Controller的方法级AOP安全控制  begin-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
	<!-- end -->



</beans>
